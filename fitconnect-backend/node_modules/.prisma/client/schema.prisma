generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  TRAINER
  NUTRITIONIST
}

model WorkoutPlan {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  trainer     User     @relation("TrainerPlans", fields: [trainerId], references: [id])
  trainerId   Int
  patient     User     @relation("PatientPlans", fields: [patientId], references: [id])
  patientId   Int
}

model PhysicalAssessment {
  id          Int      @id @default(autoincrement())
  method      String
  date        DateTime @default(now())
  data        Json
  patient     User     @relation("AssessmentPatient", fields: [patientId], references: [id])
  patientId   Int
  createdBy   User     @relation("AssessmentCreator", fields: [createdById], references: [id])
  createdById Int
}

model MealPlan {
  id             Int      @id @default(autoincrement())
  title          String
  description    String
  createdAt      DateTime @default(now())
  nutritionist   User     @relation("NutritionistPlans", fields: [nutritionistId], references: [id])
  nutritionistId Int
  patient        User     @relation("MealPatientPlans", fields: [patientId], references: [id])
  patientId      Int
}

model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  password           String
  name               String
  role               Role
  createdAt          DateTime             @default(now())
  trainerPlans       WorkoutPlan[]        @relation("TrainerPlans")
  patientPlans       WorkoutPlan[]        @relation("PatientPlans")
  assessments        PhysicalAssessment[] @relation("AssessmentPatient")
  createdAssessments PhysicalAssessment[] @relation("AssessmentCreator")
  nutritionistPlans  MealPlan[]           @relation("NutritionistPlans")
  mealPatientPlans   MealPlan[]           @relation("MealPatientPlans")
}
