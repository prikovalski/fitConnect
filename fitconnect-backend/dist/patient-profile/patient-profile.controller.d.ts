import { PatientProfileService } from './patient-profile.service';
export declare class PatientProfileController {
    private readonly patientProfileService;
    constructor(patientProfileService: PatientProfileService);
    create(req: any, body: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    }>;
    getProfile(req: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    } | null>;
    updateProfile(req: any, body: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    }>;
    savePatientProfile(req: any, body: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    }>;
    getPatientProfile(req: any): Promise<{
        height: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
        gender: import(".prisma/client").$Enums.Gender | null;
        birthDate: Date | null;
        weight: number | null;
    }>;
    uploadPhoto(req: any, file: Express.Multer.File): Promise<{
        id: number;
        url: string;
        uploadedAt: Date;
        patientId: number;
    }>;
    getPhotos(req: any): Promise<{
        id: number;
        url: string;
        uploadedAt: Date;
        patientId: number;
    }[]>;
    deletePhoto(req: any, photoId: string): Promise<{
        message: string;
    }>;
}
