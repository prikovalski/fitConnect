import { PrismaService } from '../prisma.service';
export declare class PatientProfileService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    private mapGenderToEnum;
    create(userId: number, data: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    }>;
    getByUserId(userId: number): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    } | null>;
    update(userId: number, data: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    }>;
    saveProfile(userId: number, data: any): Promise<{
        id: number;
        userId: number;
        height: number;
        weight: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
    }>;
    getPatientProfile(userId: number): Promise<{
        height: number;
        city: string;
        goal: string;
        chronicDisease: string | null;
        medicalRestriction: string | null;
        foodAllergy: string | null;
        avoidFood: string | null;
        physicalActivity: string | null;
        activityFrequency: string | null;
        fixedMealTimes: string | null;
        mustHaveFood: string | null;
        neckCircumference: number | null;
        waistCircumference: number | null;
        hipCircumference: number | null;
        profileImageUrl: string | null;
        gender: import(".prisma/client").$Enums.Gender | null;
        birthDate: Date | null;
        weight: number | null;
    }>;
    savePatientPhoto(patientId: number, imageUrl: string): Promise<{
        id: number;
        url: string;
        uploadedAt: Date;
        patientId: number;
    }>;
    getPatientPhotos(userId: number): Promise<{
        id: number;
        url: string;
        uploadedAt: Date;
        patientId: number;
    }[]>;
    deletePatientPhoto(userId: number, photoId: number): Promise<{
        message: string;
    }>;
}
